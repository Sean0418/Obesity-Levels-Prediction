knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
obesitydf <- read_csv('dataset/Obesity_dataset.csv')
#https://www.kaggle.com/datasets/fatemehmehrparvar/obesity-levels/data
head(obesitydf)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
obesitydf <- read_csv('dataset/Obesity_dataset.csv')
#https://www.kaggle.com/datasets/fatemehmehrparvar/obesity-levels/data
dim(obesitydf)
dim(complete(obesitydf)) #no implicitly missing values
dim(na.omit(obesitydf)) #no explicitly missing values/NAs
unique(obesitydf$NObeyesdad)
none <- glm(NObeyesdad~1, data=obesitydf)
library(nnet)
none <- multinom(Nobeyesdad~1, data=obesitydf)
none <- multinom(NObeyesdad~1, data=obesitydf)
none
full <- multinom(NObeyesdad~., data=obesitydf)
full
MASS:stepAIC(full, direction="both")
MASS::stepAIC(full, direction="both")
step <-MASS::stepAIC(full, direction="both")
summary(step)
summary(obesitydf)
levels(obesitydf$NObeyesdad)
obesitydf$NObeyesdad2 <- relevel(obesitydf$NObeyesdad, ref="Normal_Weight")#use "Normal_Weight" as reference
levels(obesitydf$NObeyesdad)
obesitydf$NObeyesdad <- factor(obesitydf$NObeyesdad)
levels(obesitydf$NObeyesdad)
head(obesitydf)
obesitydf$NObeyesdad2 <- relevel(obesitydf$NObeyesdad, ref="Normal_Weight")#use "Normal_Weight" as reference
head(obesitydf)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nnet)
obesitydf <- read_csv('dataset/Obesity_dataset.csv')
#https://www.kaggle.com/datasets/fatemehmehrparvar/obesity-levels/data
head(obesitydf)
dim(obesitydf)
dim(complete(obesitydf)) #no implicitly missing values
dim(na.omit(obesitydf)) #no explicitly missing values/NAs
#clean data
unique(obesitydf$NObeyesdad) #all possible values for the classification of obesity
summary(obesitydf)
obesitydf$NObeyesdad <- factor(obesitydf$NObeyesdad)
levels(obesitydf$NObeyesdad)
obesitydf$NObeyesdad <- relevel(obesitydf$NObeyesdad, ref="Normal_Weight")#use "Normal_Weight" as reference
head(obesitydf)
obesitydf$NObeyesdad <- factor(obesitydf$NObeyesdad)
levels(obesitydf$NObeyesdad)
obesitydf$NObeyesdad <- relevel(obesitydf$NObeyesdad, ref="Normal_Weight")#use "Normal_Weight" as reference
none <- multinom(NObeyesdad2~1, data=obesitydf)
none <- multinom(NObeyesdad~1, data=obesitydf)
full <- multinom(NObeyesdad~., data=obesitydf)
step <- MASS::stepAIC(full, direction="both", trace=F)
step
summary(step)
summary(step)$coef/summary(step)$standard.error
summary(step)
summary(step)$coef/summary(step)$std.error
summary(step)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nnet)
obesitydf <- read_csv('dataset/Obesity_dataset.csv')
#https://www.kaggle.com/datasets/fatemehmehrparvar/obesity-levels/data
summary(step)$coef/summary(step)$Std.Errors
summary(step)
library(Boruta)
head(pp <- fitted(step))
fitted(step)
step
head(pp <- fitted(obesitydf))
fitted(step)
head(pp <- fitted(step))[1]
head(pp <- fitted(step))[1, 1]
head(pp <- fitted(step))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nnet)
obesitydf <- read_csv('dataset/Obesity_dataset.csv')
#https://www.kaggle.com/datasets/fatemehmehrparvar/obesity-levels/data
#effect size of predictors
model_coeffs <- tidy(model)
#effect size of predictors
model_coeffs <- tidy(step)
library(broom)
#effect size of predictors
model_coeffs <- tidy(step)
model_coeffs
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
labs(title = "Odds Ratios of Predictors", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal()
model_coeffs
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
labs(title = "Odds Ratios of Predictors", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
labs(title = "Odds Ratios of Predictors", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
labs(title = "Odds Ratios of Predictors", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal() +
guides(fill=guide_legend(title="Classifications"))
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal() +
guides(fill=guide_legend(title="Classifications"))
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
model_coeffs
for (i in 1:nrow(model_coeffs)){
if (model_coeffs$odds_ratio[i] < 0){
print(i)
}
}
for (i in 1:nrow(model_coeffs)){
if (model_coeffs$odds_ratio[i] < 0){
print(i)
}
}
j=0
j=0
for (i in 1:nrow(model_coeffs)){
if (model_coeffs$odds_ratio[i] < 0){
print(i)
}else{
j++
}
j=0
for (i in 1:nrow(model_coeffs)){
if (model_coeffs$odds_ratio[i] < 0){
print(i)
}else{
j=j+1
}
}
j
nrow(model_coeffs)
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal() +
guides(fill=guide_legend(title="Classifications"))
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
model_coeffs
tidy(step)
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal() +
guides(fill=guide_legend(title="Classifications"))
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal() +
guides(fill=guide_legend(title="Classifications"))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal() +
guides(fill=guide_axis(title="Classifications"))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal() +
guides(fill=guide_colorbar(title="Classifications"))
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
#geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio") +
theme_minimal()
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point() +
#geom_errorbar(aes(ymin = exp(estimate - std.error), ymax = exp(estimate + std.error)), width = 0.2) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.1) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(x=0) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(xintercept = 0) +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(xintercept = 0, linetype="dashed") +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(xintercept = 0, linetype="dashed", color="blue") +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(xintercept = 0, linetype="dashed", color="blue")
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(xintercept = 0, linetype="dashed", color="blue") +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(yintercept = 0, linetype="dashed", color="blue")
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_vline(yintercept = 0, linetype="dashed", color="blue") +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_hline(yintercept = 0, linetype="dashed", color="blue")
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_hline(yintercept = 0, linetype="dashed", color="blue") +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_hline(yintercept = 1, linetype="dashed", color="blue") +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification") +
theme_minimal()
#effect size of predictors
model_coeffs <- tidy(step) %>%
mutate(odds_ratio=exp(estimate))
ggplot(model_coeffs, aes(x = term, y = odds_ratio, color = as.factor(y.level))) +
geom_point(alpha=0.5) +
geom_hline(yintercept = 1, linetype="dashed", color="blue") +
coord_flip() +
scale_y_log10() +
labs(title = "Odds Ratios of Predictors (Log Scale)", x = "Predictor Variables", y = "Odds Ratio", color="Classification",
caption="The dashed line indicates where the predictors have no effects") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nnet)
library(broom)
obesitydf <- read_csv('dataset/Obesity_dataset.csv')
#https://www.kaggle.com/datasets/fatemehmehrparvar/obesity-levels/data
obesitydf
set.seed(2418)
data <- obesitydf %>% crossv_kfold(4)
head(prob <- fitted(step))
library(caret)
library(caret)
trainControl(method="cv", number =5)
train(NObeyesdad ~ Gender + Height + Weight + CALC +
FAVC + SCC + CH2O + family_history_with_overweight + FAF +
TUE, data = obesitydf, method="multinom", trControl=tr)
tc <- trainControl(method="cv", number =5)
train(NObeyesdad ~ Gender + Height + Weight + CALC +
FAVC + SCC + CH2O + family_history_with_overweight + FAF +
TUE, data = obesitydf, method="multinom", trControl=tr)
train(NObeyesdad ~ Gender + Height + Weight + CALC +
FAVC + SCC + CH2O + family_history_with_overweight + FAF +
TUE, data = obesitydf, method="multinom", trControl=tc)
tc <- trainControl(method="cv", number =5)
model <- train(NObeyesdad ~ Gender + Height + Weight + CALC +
FAVC + SCC + CH2O + family_history_with_overweight + FAF +
TUE, data = obesitydf, method="multinom", trControl=tc)
print(model)
